@PACKAGE_INIT@

set(MaCh3Tutorial_VERSION @PROJECT_VERSION@)

LIST(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/../../../cmake)

get_filename_component(MaCh3_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
list(APPEND CMAKE_MODULE_PATH "${MaCh3Tutorial_CMAKE_DIR}")
list(APPEND CMAKE_MODULE_PATH "${MaCh3Tutorial_CMAKE_DIR}/cmake")

enable_language(CXX)

set(MaCh3Tutorial_FOUND TRUE)

find_package(MaCh3 @MaCh3_VERSION@ REQUIRED)

if(NOT TARGET MaCh3::All)
  cmessage(FATAL_ERROR "Didn't set up MaCh3::All")
endif()

get_filename_component(MaCh3_CMAKE_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)

find_path(MaCh3Tutorial_INCLUDE_DIR
  NAMES mcmc/FitterBase.h
  PATHS ${MaCh3Tutorial_CMAKE_DIR}/include/
)

find_path(MaCh3_LIB_DIR
  NAMES libMCMC.so
  PATHS ${MaCh3Tutorial_CMAKE_DIR}/lib/
)

find_path(MaCh3_PREFIX
  NAMES bin/setup.MaCh3Tutorial.sh
  PATHS ${MaCh3Tutorial_CMAKE_DIR}/
)

cmessage(STATUS "MaCh3Tutorial_LIB_DIR: ${MaCh3Tutorial_LIB_DIR}")
cmessage(STATUS "MaCh3Tutorial_INCLUDE_DIR: ${MaCh3Tutorial_INCLUDE_DIR}")
cmessage(STATUS "MaCh3Tutorial_PREFIX: ${MaCh3Tutorial_PREFIX}")
cmessage(STATUS "MaCh3Tutorial_VERSION: ${MaCh3Tutorial_VERSION}")

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(MaCh3Tutorial
    REQUIRED_VARS
      MaCh3Tutorial_INCLUDE_DIR
      MaCh3Tutorial_LIB_DIR
      MaCh3Tutorial_PREFIX
    VERSION_VAR
      MaCh3_VERSION
)
