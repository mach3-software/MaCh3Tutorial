General:
  OutputFile: "Test.root"
  TutorialSamples: ["TutorialConfigs/Samples/SampleHandler_Tutorial.yaml",
                    #"TutorialConfigs/Samples/SampleHandler_Tutorial_ATM.yaml"
                    ]
  FittingAlgorithm: "MCMC"

  RealData: false
  Asimov: true
  CustomReWeight: false
  FakeData: false
  ProcessMCMC: No
  Debug: No
  RandomStart: false
  Seed: 0
  MaCh3Modes: "TutorialConfigs/MaCh3Modes.yaml"
  Fitter:
    FitTestLikelihood: false
  Minuit2:
    NSteps: 100000
  PSO:
    Constriction: 1
    Inertia: 1.
    One: 1.
    Two: 1.
    Particles: 10
    Iterations: 10000
    Convergence: 1.
    TestLikelihoodDim: 9

  MCMC:
    NSteps: 10000
    #KS: Sets how frequent (number of steps) you want to autosave your chain, if you autosave rarely chain will be slightly faster, if you job wall is small you might want more frequent autosave to reduce number of lost steps
    #AutoSave: 500
    AutoSave: 10000
    UseReactorConstraint: No
    #Burn in for posterior predictive code
    BurnInSteps: 200000
  Systematics:
    XsecCovName: "xsec_cov"
    XsecFix: [ "baseline", "density", "Ye", "prod_height" ]
    XsecCovFile: ["TutorialConfigs/CovObjs/SystematicModel.yaml",
                  "TutorialConfigs/CovObjs/OscillationModel.yaml"
                  #"TutorialConfigs/CovObjs/PCATest.yaml"
                  ]
    XsecPCAThreshold: -1
    XsecPCAParams: [-999, -999]
    XsecStepScale: 0.05

# Prior/Posterior predictive settings
Predictive:
  Ntoy: 10
  #Ntoy: 5000
  #Use Full LLH or only sample contribution based on discussion with Asher we almost always only want the sample likelihood
  FullLLH: false
  PosteriorFiles: "EMPTY"

# LLH Scan settings  
LLHScan:
  # don't make LLH for certain systematic groups
  #LLHScanSkipVector: []
  # Save individual sample contributions to the LLH
  LLHScanBySample: false
  # Number of points we run LLH scans for each systematic
  #LLHScanPoints: 50
  # Number of points for 2D scan in each direction
  #2DLLHScanPoints: 20
  # Add physical ranges for special params whose priors/errors may not be well well-defined
  ScanRanges:
    #delta_cp: [-3.14,3.14]

#KinemDistribution extra plots to draw
KinematicDistributionPlots:
- Name: "True Neutrino Energy (0.5 GeV < Enu < 3 GeV)"
  VarStrings: ["TrueNeutrinoEnergy"]
  VarBins: [[40,0,4]]
  KinematicCuts:
  - VarString: "TrueNeutrinoEnergy"
    Range: [0.5,3]
- Name: "Q2 vs True Enu"
  VarStrings: ["TrueNeutrinoEnergy", "TrueQ2"]
  VarBins: [[50,0,4],[50,0,6]]


AdaptionOptions:
  Settings:
    # When do we start throwing from our adaptive matrix?
    StartThrow: 2000
    # When do we start putting steps into our adaptive covariance?
    StartUpdate: 0
    # When do we end updating our covariance?
    EndUpdate: 50000
    # How often do we change our matrix throws?
    UpdateStep: 1000
    OutputFileName: "Adapt.root"
  Covariance:
    # So now we list individual matrices, let's just do xsec
    xsec_cov:
      # Do we want to adapt this matrix?
      DoAdaption: false
      # So we can separate out flux and xsec
      MatrixBlocks: [ ]
      # External Settings
      UseExternalMatrix: false
      ExternalMatrixFileName: ""
      ExternalMatrixName: ""
      ExternalMeansName: ""
